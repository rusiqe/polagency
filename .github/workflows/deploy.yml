
name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.AWS_HOST }}" >> ~/.ssh/known_hosts

      - name: Create .env file on server
        run: |
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} \
          "echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' > ~/polagency/.env"
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} \
          "echo 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' >> ~/polagency/.env"
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} \
          "echo 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' >> ~/polagency/.env"
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} \
          "echo 'AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}' >> ~/polagency/.env"
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} \
          "echo 'AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}' >> ~/polagency/.env"
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} \
          "echo 'DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}' >> ~/polagency/.env"

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} << 'EOF'
            cd ~/polagency
            git pull origin main
            source venv/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput
            sudo systemctl restart gunicorn
          EOF

